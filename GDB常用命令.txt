参考资料：https://blog.csdn.net/sinat_31275315/article/details/108280509

（1）break 行号 | 函数名<条件表达式>| 函数地址  设置断点
	break...if.... 可以实现条件断点  break foo if x>0
（2）info break 查看断点信息（i b）

（3）delete (Num) ，删除断点，带序号删除单个断点，不带删除所有
	使用前最好 i b 查看一下当前的断点

（4）info functions 列出可执行文件的所有函数名称
	info + 函数名 检索和列出对应函数名的信息（主要是地址有用）

（5）bt 查看调用堆栈

（6）finish 退出函数

（7）i r 查看函数返回值

（8）c  继续运行

（9）print <变量>/<表达式> 主要用来打印全局变量
	print/输出格式


（10）查看内存地址的值
x/ (n,f,u为可选参数)
n: 需要显示的内存单元个数，也就是从当前地址向后显示几个内存单元的内容，一个内存单元的大小由后面的u定义
f：显示格式
	x(hex) 按十六进制格式显示变量。
	d(decimal) 按十进制格式显示变量。
	u(unsigned decimal) 按十进制格式显示无符号整型。
	o(octal) 按八进制格式显示变量。
	t(binary) 按二进制格式显示变量。
	a(address) 按十六进制格式显示变量。
	c(char) 按字符格式显示变量。
	f(float) 按浮点数格式显示变量
u：每个单元的大小，按字节数来计算。默认是4 bytes。GDB会从指定内存地址开始读取指定字节，并把其当作一个值取出来，并使用格式f来显示
	b:1 byte h:2 bytes w:4 bytes g:8 bytes
比如x/3uh 0x54320表示从内存地址0x54320读取内容，h表示以双字节为单位，3表示输出3个单位，u表示按照十六进制显示。


（11）set + 变量 = 变量值   改变程序中某个变量的值
	set i = 3


